# Generated by Django 5.1.6 on 2025-06-26 07:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AwsAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("aws_mail", models.EmailField(max_length=254)),
                ("invitation", models.BooleanField(default=False)),
                (
                    "invitation_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("provider_name", models.CharField(max_length=255)),
                ("customer_name", models.CharField(max_length=255)),
                ("business_id", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("invoice_number", models.CharField(max_length=255)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("due_date", models.DateTimeField()),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Partner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="partners/"),
                ),
                ("website", models.URLField(blank=True, null=True)),
                ("contact_number", models.CharField(max_length=20)),
                (
                    "aws_access_key_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "aws_secret_access_key",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RootInvoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                (
                    "invoice_file",
                    models.FileField(blank=True, null=True, upload_to="invoice/"),
                ),
                ("invoice_date", models.DateField()),
                ("bill_start_date", models.DateField()),
                ("bill_end_date", models.DateField()),
            ],
            options={
                "verbose_name": "Root Invoice",
                "verbose_name_plural": "Root Invoices",
            },
        ),
        migrations.CreateModel(
            name="AWSAccountInvoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("total_ammount", models.FloatField(default=0.0)),
                ("invoice_date", models.DateField()),
                ("bill_start_date", models.DateField()),
                ("bill_end_date", models.DateField()),
                (
                    "aws_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aws_account_invoices",
                        to="main.awsaccount",
                    ),
                ),
            ],
            options={
                "verbose_name": "AWS Account Invoice",
                "verbose_name_plural": "AWS Account Invoices",
            },
        ),
        migrations.CreateModel(
            name="AwsCostManagement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("billing_date", models.DateField()),
                ("account_id", models.CharField(max_length=255)),
                (
                    "account_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "account_email",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("service", models.CharField(max_length=255)),
                ("cost", models.FloatField(default=0)),
                ("cost_unit", models.CharField(max_length=25)),
                ("usage", models.FloatField(default=0)),
                ("usage_unit", models.CharField(default="-", max_length=25)),
                (
                    "aws_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.awsaccount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cost Management",
                "verbose_name_plural": "Cost Managements",
            },
        ),
        migrations.AddField(
            model_name="awsaccount",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="aws_accounts",
                to="main.customer",
            ),
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("group_name", models.CharField(max_length=255)),
                ("start_date", models.DateTimeField()),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to="main.customer",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.invoice",
                    ),
                ),
            ],
            options={
                "unique_together": {("group_name", "customer")},
            },
        ),
        migrations.AddField(
            model_name="awsaccount",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="aws_accounts",
                to="main.group",
            ),
        ),
        migrations.CreateModel(
            name="MonthlyCostByAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("month", models.DateField()),
                ("total_cost", models.FloatField(default=0)),
                (
                    "aws_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="monthly_cost_by_account",
                        to="main.awsaccount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Monthly Cost by Account",
                "verbose_name_plural": "Monthly Costs by Account",
            },
        ),
        migrations.AddField(
            model_name="customer",
            name="partner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="customers",
                to="main.partner",
            ),
        ),
        migrations.AddField(
            model_name="awsaccount",
            name="partner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="aws_accounts",
                to="main.partner",
            ),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("phone_number", models.CharField(max_length=20)),
                ("password", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CustomerUser", "Customer User"),
                            ("CustomerManager", "Customer Manager"),
                            ("PartnerManager", "Partner Manager"),
                            ("PartnerUser", "Partner User"),
                        ],
                        max_length=50,
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.customer",
                    ),
                ),
                (
                    "partner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.partner",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("name", models.CharField(max_length=50)),
                (
                    "region",
                    models.CharField(
                        blank=True, default="us-east-1", max_length=50, null=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "AWS Service",
                "verbose_name_plural": "AWS Services",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("name", "region"), name="unique_service_region"
                    )
                ],
            },
        ),
        migrations.AlterUniqueTogether(
            name="customer",
            unique_together={("customer_name", "partner")},
        ),
        migrations.AlterUniqueTogether(
            name="awsaccount",
            unique_together={("aws_mail", "customer", "partner")},
        ),
        migrations.CreateModel(
            name="AccountService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.UUIDField(blank=True, null=True)),
                ("updated_by", models.UUIDField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("update_history", models.JSONField(blank=True, null=True)),
                ("blended_cost", models.FloatField(default=0)),
                ("usage_amount", models.FloatField(default=0)),
                ("unblendend_cost", models.FloatField(default=0)),
                ("usage_start_date", models.DateField(blank=True, null=True)),
                ("usage_end_date", models.DateField(blank=True, null=True)),
                ("product_description", models.TextField(blank=True, null=True)),
                ("tax_type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "line_item_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "product_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "currency_code",
                    models.CharField(
                        blank=True, default="USD", max_length=10, null=True
                    ),
                ),
                ("public_on_demand_cost_pricing", models.FloatField(default=0)),
                (
                    "usage_unit_pricing",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "usage_term_pricing",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("public_on_demand_rate_pricing", models.FloatField(default=0)),
                ("savings_plan_used_commitment", models.FloatField(default=0)),
                ("savings_plan_savings_plan_rate", models.FloatField(default=0)),
                ("savings_plan_total_commitment_to_date", models.FloatField(default=0)),
                (
                    "savings_plan_savings_plan_effective_cost",
                    models.FloatField(default=0),
                ),
                (
                    "savings_plan_savings_plan_arn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "savings_plan_recurring_commitment_for_billing_period",
                    models.FloatField(default=0),
                ),
                (
                    "savings_plan_amortized_upfront_commitment_for_billing_period",
                    models.FloatField(default=0),
                ),
                (
                    "extra_rate_type",
                    models.CharField(
                        choices=[("Flat", "Flat"), ("Percentage", "Percentage")],
                        default="Percentage",
                        max_length=50,
                    ),
                ),
                ("extra_rate_value", models.FloatField(default=0)),
                (
                    "aws_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_services",
                        to="main.awsaccount",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.rootinvoice",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_services",
                        to="main.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account Service",
                "verbose_name_plural": "Account Services",
                "indexes": [
                    models.Index(
                        fields=["aws_account", "invoice"],
                        name="main_accoun_aws_acc_f42c16_idx",
                    ),
                    models.Index(
                        fields=["usage_end_date"], name="main_accoun_usage_e_351922_idx"
                    ),
                ],
            },
        ),
    ]
